{
  "name": "torth",
  "tagline": "experimental concatenative programming language",
  "body": "### About torth\r\ntorth (Typed fORTH) is a experimental programming language, going to be designed to check some conceptions, like  those:\r\n\r\n- colour usage instead of or in combination with some syntax elements\r\n- building words from word parts\r\n- delegation of computations to different execution instances\r\n- rich and easily expandable type system\r\n- non-english default words for better divide words into parts, for example Esperanto\r\n- working with multiple IO devices with simple and good looking syntax\r\n- being very portable, usable an devices in range from 8-bit microcontrollers to powerful server machines\r\n- no one will say that torth isn't tort (Russian торт - cake, pie - means something good)\r\n\r\n### Long story\r\nAt first torth was going to be concatenative language. But I have realized that there are enough pure-concatenative languages, so now idea is using of concatenated sentences instead of words, with multiple stacks and static types. Sentenced are using stacks by design, so you'll be able to put some value here, and take it there. Of course, there would be subsentences, where local stacks would exist, and so on.\r\n\r\nOne [sub]sentence is basically one logical action, or one logical context change (for example, sentence could start a pack of sentences to pass them somewhere or save them, but not to run'em all right now).\r\n\r\nThere is a need in rich and powerful object and type system, I have no idea right now how exactly it should look like, but I think duck typing should work well enough.\r\n\r\nIdeal realization of torth would be very close to natural language on it's syntax. To do that, we should create rich vocabulary, and syntax engine that would be able to ignore some words or word parts.\r\n\r\n### Authors and Contributors\r\nCurrently author of torth is @Renha. Work is based on Chuck Moore's conceptions, but code isn't.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}